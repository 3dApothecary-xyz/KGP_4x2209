# KGP_4x2209 Example printer.cfg

[include mainsail.cfg]

[mcu]
serial: /dev/serial/by-id/<user specified>
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[temperature_sensor host]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[adc_temperature ps_voltage]
# PSU Voltage Value from Thermistor Value
# Assumuptions:
# 1. Power Supply Voltage from 0V to 70V
# 2. Thermistor ADC Pullup 4.7k
temperature1: 2
voltage1: 0.151
temperature2: 70
voltage2: 3.049
[temperature_sensor ps_voltage]
adc_voltage: 3.3
sensor_pin: PA2  
sensor_type: ps_voltage
min_temp: 11  # For 12V Power Supply
max_temp: 26  # For 24V Power Supply
gcode_id: Ps_voltage 


[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT


[printer]
kinematics: <user specified>
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100


# Motor 0
[stepper_x]
enable_pin: !PC9
dir_pin: PA10
step_pin: PB15
microsteps: 32
rotation_distance: 40
#$#endstop_pin: !PB12
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: <user specified>
position_max: <user specified>
position_endstop: <user specified>
homing_speed: <user specified>
[tmc2209 stepper_x]
uart_pin: PC15
diag_pin: ^PB4
uart_address: 0
run_current: <user specified>
stealthchop_threshold: 999999
driver_SGTHRS: <user specified>

# Motor 1
[stepper_y]
enable_pin: !PB9
dir_pin: !PC11
step_pin: PC10
microsteps: 32
rotation_distance: 40
#$#endstop_pin: !PC14
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: <user specified>
position_max: <user specified>
position_endstop: <user specified>
homing_speed: <user specified>
[tmc2209 stepper_y]
uart_pin: PC15
diag_pin: ^PC13
uart_address: 1
run_current: <user specified>
stealthchop_threshold: 999999
driver_SGTHRS: <user specified>


# Motor 2
[stepper_z]
enable_pin: !PC14
dir_pin: !PA13
step_pin: PA3
microsteps: 16
rotation_distance: 2
endstop_pin: PC15
position_endstop: 0.0
#$#endstop_pin: probe:z_virtual_endstop
position_max: <user specified>
position_min: <user specified>
[tmc2209 stepper_z]
uart_pin: PC15
diag_pin: PC0
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999
#driver_SGTHRS: <user specified>


[bltouch]
sensor_pin: PD3
control_pin: PD4
x_offset: <user specified>
y_offset: <user specified>
z_offset: 0
pin_move_time: 0.4
speed: 20

#$#[safe_z_home]
#$#home_xy_position: 110, 110 # Change coordinates to the center of your print bed
#$#speed: 50
#$#z_hop: 10                 # Move up 10mm
#$#z_hop_speed: 5

#$#[bed_screws]
#$#screw1:   20,   60
#$#screw2:   20,  210
#$#screw3:  200,  210
#$#screw4:  200,   60


# Motor 3
[extruder]
enable_pin: !PC2
dir_pin: PB10
step_pin: PB12
microsteps: 16
rotation_distance: <user specified>
max_extrude_only_distance: 100.0
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3   #$# HEATER1
sensor_type: <user specified>
sensor_pin: PA1   #$# THERM1
control: pid
pid_Kp: 21.0   #$# Sample PID Values
pid_Ki: 1.0
pid_Kd: 110.0
min_temp: 0
max_temp: 250
[tmc2209 extruder]
uart_pin: PC15
diag_pin: PC3
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999
#driver_SGTHRS: <user specified>
[heater_fan extruder_fan]
pin: PC12  #$# FAN1
max_power: 1.0
fan_speed: 1.0
#kick_start_time: 0
heater: extruder
heater_temp: 30
[fan]
pin: PC1 #$# FAN2

[heater_bed]
heater_pin: PD6  #$# HEATER0
sensor_pin: PA0  #$# THERM0
sensor_type: <user specified>
pullup_resistor: 4700
control: pid
pid_Kp: 65.0   #$# Sample PID Values
pid_Ki: 1.5
pid_Kd: 710.0
min_temp: 0
max_temp: 130
#[verify_heater heater_bed]
#max_error: 120
#check_gain_time: 150
#hysteresis: 5
#heating_gain: 2


[filament_switch_sensor switch_sensor]
switch_pin: PB1  # DSENSOR3
pause_on_runout: False
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 FILAMENT RUNOUT
insert_gcode:
  M117 Filament switch inserted

[filament_motion_sensor encoder_sensor]
switch_pin: PB2  # DSENSOR4
detection_length: 15
extruder: extruder
pause_on_runout: True
event_delay: 3.0
pause_delay: 1.0
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 FILAMENT STALLED
insert_gcode:
  M117 Filament encoder inserted


[led status_led]
#red_pin:
green_pin: PA14 #$# BOOT0_SWCLK_LED
#blue_pin:
#white_pin:
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 0.0
initial_GREEN: 0.05
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.

[led strip_led0]
#red_pin:
#green_pin: 
#blue_pin:
white_pin: PA8 #$# FAN0
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 0.0
# initial_GREEN: 0.0
#initial_BLUE: 0.0
initial_WHITE: 0.01
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.

[led strip_led1]
#red_pin:
#green_pin: 
#blue_pin:
white_pin: PC4 #$# FAN3
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 0.0
# initial_GREEN: 0.0
#initial_BLUE: 0.0
initial_WHITE: 0.1
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.

[neopixel neopixel0]
pin: PD5 #$# NEOPIXEL0
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 8
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 0.25
initial_GREEN: 0.0
initial_BLUE: 0.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

[neopixel neopixel1]
pin: PD2 #$# NEOPIXEL1
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 8
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.25
initial_BLUE: 0.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC6,     # BEEPER
    EXP1_2=PC7,     # LCDBTN
    EXP1_3=PD8,     # LCDEN
    EXP1_4=PB13,    # LCDRS
    EXP1_5=PB14,    # LCDD4
    EXP1_6=PB11,    # LCDD5
    EXP1_7=<NC>,    # LCDD6
    EXP1_8=<NC>,    # LCDD7
    EXP1_9=<GND>,
    EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6,     # LCDMISO
    EXP2_2=PA5,     # LCDSCK
    EXP2_3=PC8,     # LCDENCA
    EXP2_4=PA4,     # LCDCS
    EXP2_5=PD9,     # LCDENCB
    EXP2_6=PA7,     # LCDMOSI
    EXP2_7=<NC>,    # LCDDET
    EXP2_8=<RST>, 
    EXP2_9=<GND>,
    EXP2_10=<NC>

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
spi_bus: spi1
## Alternatively, some micro-controller boards may work with software spi:
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

[output_pin beeper]
pin: EXP1_1

[neopixel btt_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4


##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3



[adxl345]
cs_pin: PB0
spi_bus: spi1
#spi_software_sclk_pin: PA5
#spi_software_mosi_pin: PA7
#spi_software_miso_pin: PA6
axes_map = x,y,z
[resonance_tester]
accel_chip: adxl345
probe_points:
    110,110,100
